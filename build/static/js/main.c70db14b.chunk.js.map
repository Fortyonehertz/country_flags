{"version":3,"sources":["Breakpoints.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Device","xs","sm","lg","primary","secondary","contrast","contrast2","StyledApp","styled","div","props","isCorrect","App","useState","country","setCountry","setIsCorrect","options","setOptions","incorrectAnswers","setIncorrectAnswers","currentStreak","setCurrentStreak","countryCodes","Object","keys","Countries","randomInRange","min","max","Math","floor","random","getRandomCountry","length","nextCountry","nextOptions","possibleOption","includes","push","useEffect","inIncorrectAnwers","option","className","src","toLowerCase","alt","usedIndexes","index","getOptionsInRandomOrder","map","onClick","val","style","backgroundColor","undefined","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c70db14b.chunk.js","sourcesContent":["const Device = {\n    xs: `(max-width: 320px)`,\n    sm: `(max-width: 768px)`,\n    lg: `(max-width: 800px)`,\n};\n\nexport default Device;\n","import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport styled, { CSSProperties } from \"styled-components\";\nimport Device from \"./Breakpoints\";\n\nimport Countries from \"./countries.json\";\n\ntype CountryCode = keyof typeof Countries;\n\nconst primary = \"191919\";\nconst secondary = \"F6E4F6\";\nconst correct = \"218380 \";\nconst incorrect = \"E3655B\";\nconst contrast = \"C6D8D3\";\nconst contrast2 = \"218380\";\n\nconst StyledApp = styled.div<{ isCorrect: boolean }>`\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    justify-content: center;\n    overflow-x: hidden;\n    overflow-y: hidden;\n    align-items: center;\n    background-color: ${`#${primary}`};\n    height: 100vh;\n    width: 100vw;\n\n    .title {\n        color: ${`#${secondary}`};\n        font-size: 2.5rem;\n        padding: 0px;\n        margin: 0px;\n    }\n\n    .flag {\n        width: 35%;\n        aspect-ratio: 16 / 9;\n        border: solid ${`#${secondary}`} 4px;\n        border-radius: 24px;\n\n        @media ${Device.lg} {\n            width: 80%;\n        }\n    }\n\n    .streak {\n        color: ${`#${secondary}`};\n        font-size: 0.8rem;\n    }\n\n    .options {\n        width: 35%;\n        display: flex;\n        flex-direction: row;\n        flex-wrap: wrap;\n        gap: 1rem;\n\n        @media ${Device.lg} {\n            width: 80%;\n        }\n    }\n\n    .button {\n        font-size: 1rem;\n        width: 15rem;\n        flex-grow: 1;\n        padding: 1rem 2rem;\n        border: none;\n        border-radius: 24px;\n        background-color: ${`#${secondary}`};\n        color: ${`#${primary}`};\n\n        transition: background-color 0.6s;\n\n        &:hover {\n            background-color: ${`#${contrast}`};\n        }\n\n        @media ${Device.lg} {\n            font-size: 0.8rem;\n        }\n    }\n\n    .next {\n        background-color: ${`#${contrast2}`};\n        color: ${`#${primary}`};\n        min-width: 24ch;\n        flex-grow: 0;\n        font-size: 1rem;\n\n        &:hover {\n            background-color: ${`#${contrast2}`};\n            box-shadow: 0px 4px 5px 2px ${`#${secondary}`};\n        }\n\n        transition: box-shadow 0.4s;\n\n        @media ${Device.lg} {\n            font-size: 0.8rem;\n            min-width: 0ch;\n            padding: 1rem 2rem;\n        }\n    }\n\n    .modal {\n        position: absolute;\n        width: 100vw;\n        padding: 4rem;\n        opacity: 0;\n        top: auto;\n        left: auto;\n        display: flex;\n        flex-direction: column;\n        gap: 20px;\n        justify-content: center;\n        align-items: center;\n        background-color: ${`#${contrast}`};\n        font-size: 2rem;\n        color: ${`#${primary}`};\n        overflow-x: hidden;\n        overflow-y: hidden;\n\n        ${(props) => (props.isCorrect ? \"opacity: 1;\" : \"\")}\n        transition: opacity 1s;\n        z-index: 999;\n\n        @media ${Device.lg} {\n            padding: 2rem;\n            font-size: 1rem;\n        }\n    }\n`;\n\nfunction App() {\n    const [country, setCountry] = useState<CountryCode>(\"AD\");\n    const [isCorrect, setIsCorrect] = useState(false);\n    const [options, setOptions] = useState<Array<CountryCode>>([]);\n    const [incorrectAnswers, setIncorrectAnswers] = useState<\n        Array<CountryCode>\n    >([]);\n    const [currentStreak, setCurrentStreak] = useState(0);\n    const countryCodes: CountryCode[] = Object.keys(\n        Countries\n    ) as unknown as CountryCode[];\n\n    const randomInRange = (min: number, max: number) => {\n        return Math.floor(Math.random() * (max - min)) + min;\n    };\n\n    const getRandomCountry = () => {\n        return countryCodes[randomInRange(0, countryCodes.length)];\n    };\n\n    const nextCountry = () => {\n        // Choose a random country from list\n        var nextCountry = getRandomCountry();\n        var nextOptions = [nextCountry];\n        while (nextOptions.length < 4) {\n            var possibleOption = getRandomCountry();\n            if (!nextOptions.includes(possibleOption)) {\n                nextOptions.push(possibleOption);\n            }\n        }\n        setCountry(nextCountry);\n        setOptions(nextOptions);\n        setIncorrectAnswers([]);\n        setIsCorrect(false);\n    };\n\n    const checkAnswer = (val: CountryCode) => {\n        if (val === country) {\n            setIsCorrect(true);\n            if (incorrectAnswers.length === 0) {\n                setCurrentStreak(currentStreak + 1);\n            }\n        } else {\n            setIncorrectAnswers([...incorrectAnswers, val]);\n            setCurrentStreak(0);\n        }\n    };\n\n    const getOptionsInRandomOrder = (): CountryCode[] => {\n        var usedIndexes: number[] = [];\n        var nextOptions: CountryCode[] = [];\n        while (usedIndexes.length < 4) {\n            var index = randomInRange(0, 4);\n            if (!usedIndexes.includes(index)) {\n                usedIndexes.push(index);\n                nextOptions.push(options[index]);\n            }\n        }\n        return nextOptions;\n    };\n\n    useEffect(() => {\n        nextCountry();\n    }, []);\n\n    const inIncorrectAnwers = (option: CountryCode): boolean => {\n        return incorrectAnswers.includes(option);\n    };\n\n    return (\n        <StyledApp className=\"App\" isCorrect={isCorrect}>\n            <img\n                className=\"flag\"\n                src={`images/${country.toLowerCase()}.png`}\n                alt=\"Country Flag\"\n            />\n            <div className=\"options\">\n                {getOptionsInRandomOrder().map((option) => {\n                    return (\n                        <button\n                            className=\"button\"\n                            onClick={() => checkAnswer(option)}\n                            style={\n                                inIncorrectAnwers(option)\n                                    ? { backgroundColor: `#${incorrect}` }\n                                    : isCorrect && option === country\n                                    ? { backgroundColor: `#${correct}` }\n                                    : undefined\n                            }\n                            disabled={inIncorrectAnwers(option) || isCorrect}\n                        >\n                            {Countries[option]}\n                        </button>\n                    );\n                })}\n            </div>\n\n            {/* <h1 className=\"title\">Guess the Flag</h1> */}\n            <p className=\"streak\">Streak: {currentStreak}</p>\n\n            {isCorrect ? (\n                <div className=\"modal\">\n                    <div>Correct!</div>\n                    <button className=\"button next\" onClick={nextCountry}>\n                        Next Country\n                    </button>\n                </div>\n            ) : null}\n        </StyledApp>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}